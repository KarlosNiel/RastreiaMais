"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dnpwhzlros7+-00c1yd4xe*x2mxt5s1uwuxd#=hc#9he$b7wz1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
THIRD_APPS = [
    'rest_framework',
    'rest_framework_simplejwt',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'corsheaders',
    'behave_django'
]

LOCAL_APPS = [
    'apps.accounts',
    'apps.alerts',
    'apps.appointments',
    'apps.commons',
    'apps.conditions',
    'apps.locations',
    'apps.medications',
    'apps.pendencies',
    'apps.reports'
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
] + THIRD_APPS + LOCAL_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',    
]

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'API Rastreia+',
    'DESCRIPTION': 'Documentação da API para auxiliar APS e UBS no gerenciamento de Pessoas com Doenças Crônicas não transmissiveis.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    "SCHEMA_PATH_PREFIX": r"/api",

    "TAGS": [
        {"name": "token", "description": "Obtenção e renovação de tokens JWT para autenticação"},
        
        {"name": "Accounts - Manager", "description": "Gerenciamento de contas de gestores do sistema"},
        {"name": "Accounts - Professional", "description": "Gerenciamento de contas de profissionais de saúde"},
        {"name": "Accounts - Patient", "description": "Gerenciamento de contas de pacientes"},
        
        {"name": "Alerts", "description": "Criação e acompanhamento de alertas relacionados às condições de saúde"},
        {"name": "Appointments", "description": "Agendamento e gerenciamento de consultas e exames"},
        
        {"name": "Conditions - HAS", "description": "Gerenciamento de casos de Hipertensão Arterial Sistólica"},
        {"name": "Conditions - DM", "description": "Gerenciamento de casos de Diabetes Mellitus"},
        {"name": "Conditions - Other", "description": "Gerenciamento de outras doenças crônicas não transmissíveis (DCNTs)"},
        
        {"name": "Locations - Address", "description": "Gerenciamento de endereços de pacientes e instituições"},
        {"name": "Locations - Micro-Area", "description": "Gerenciamento das microáreas de cobertura da APS"},
        {"name": "Locations - Institution", "description": "Gerenciamento das instituições de saúde cadastradas"},
        
        {"name": "Medications", "description": "Cadastro e gerenciamento de medicamentos prescritos"},
        {"name": "Pendencies", "description": "Gerenciamento de pendências"},
    ]
}